package cse_142.cs1_sections.section02_expressions_for_loops_constants;

/**
 * https://practiceit.cs.washington.edu/problem/view/cs1/sections/section2/expressions
 *
 * @author Alex Golub
 * @since 01-Apr-21 3:40 PM
 */
class expressions {
  public static void main(String[] args) {
    // 4 * 3 / 8 + 2.5 * 2                          // => 6.0
    // 26 % 10 % 4 * 3                              // => 6
    // (5 * 7.0 / 2 - 2.5) / 5 * 2                  // => 6.0
    // 12 / 7 * 4.4 * 2 / 4                         // => 2.2
    // "hello 34 " + 2 * 4                          // => "hello 34 8"
    // "2 + 2 " + 3 + 4                             // => "2 + 2 34"
    // 3 + 4 + " 2 + 2"                             // => "7 2 + 2"
    // 41 % 7 * 3 / 5 + 5 / 2 * 2.5                 // => 8.0
    // 22 + 4 * 2                                   // => 30
    // 10.0 / 2/4                                   // => 1.25
    // 23 % 8 % 3                                   // => 1
    // 17 % 10 / 4                                  // => 1
    // 8 / 5 + 13 / 2 / 3.0                         // => 3.0
    // 12 - 2 - 3                                   // => 7
    // 6/2 + 7/3                                    // => 5
    // 6 * 7 % 4                                    // => 2
    // (2.5 + 3.5) / 2                              // => 3.0
    // 9 / 4 * 2.0 - 5/4                            // => 3.0
    // 3 * 4 + 2 * 3                                // => 18
    // 177 % 100 % 10 / 2                           // => 3
    // 9 / 2.0 + 7 / 3 - 3.0 / 2                    // => 5.0
    // 813 % 100 / 3 + 2.4                          // => 6.4
    // 27 / 2 / 2.0 * (4.3 + 1.7) - 8 / 3           // => 37.0
    // 89 % (5 + 5) % 5                             // => 4
    // 4.0 / 2 * 9 / 2                              // => 9.0
    // 392 / 10 % 10 / 2                            // => 4
    // 53 / 5 / (0.6 + 1.4) / 2 + 13 / 2            // => 8.5
    // 8 * 2 - 7 / 4                                // => 15
    // 37 % 20 % 3 * 4                              // => 8
    // 2.5 * 2 + 8 / 5.0 + 10 / 3                   // => 9.6
    // 2 * 3 / 4 * 2 / 4.0 + 4.5 - 1                // => 4.0
    // 89 % 10 / 4 * 2.0 / 5 + (1.5 + 1.0 / 2) * 2  // => 4.8
  }
}